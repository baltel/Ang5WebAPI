{"version":3,"sources":["webpack:///./app/account/signin/signin.component.html","webpack:///./app/account/signup/signup.component.html","webpack:///./app/account/signin.ts","webpack:///./app/account/signin/signin.component.ts","webpack:///./app/account/signup/signup.component.ts","webpack:///./app/account/account-routing.module.ts","webpack:///./app/account/account.module.ts"],"names":[],"mappings":"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","file":"dist/2.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"account-card-container\\\">\\n\\n    <mat-card>\\n        <mat-toolbar color=\\\"primary\\\">Sign in</mat-toolbar>\\n        <mat-card-content>\\n            <form name=\\\"form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"f.form.valid && signin()\\\" novalidate>\\n                <div>\\n                    <br />\\n                    <br />\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input type=\\\"text\\\" matInput [(ngModel)]=\\\"model.username\\\" name=\\\"username\\\" #username=\\\"ngModel\\\" placeholder=\\\"email\\\" (keyup)=\\\"clearMessages()\\\" required>\\n                        <mat-error>\\n                            Required\\n                        </mat-error>\\n                    </mat-form-field>\\n                    <br />\\n                    <br />\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input type=\\\"password\\\" matInput [(ngModel)]=\\\"model.password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" placeholder=\\\"password\\\" (keyup)=\\\"clearMessages()\\\" required>\\n                        <mat-error>\\n                            Required\\n                        </mat-error>\\n                    </mat-form-field>\\n                    <br />\\n                    <div *ngIf=\\\"errorMessages.length > 0\\\" class=\\\"has-error\\\">\\n                        <div *ngFor=\\\"let errorMessage of errorMessages\\\">\\n                            <small>{{ errorMessage.description }}</small>\\n                        </div>\\n                    </div>\\n                    <br />\\n                </div>\\n                <div>\\n                    <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" class=\\\"full-width\\\">Sign in</button>\\n                </div>\\n            </form>\\n        </mat-card-content>\\n    </mat-card>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/account/signin/signin.component.html\n// module id = 128\n// module chunks = 2","module.exports = \"<div class=\\\"account-card-container\\\">\\n\\n    <mat-card>\\n        <mat-toolbar color=\\\"primary\\\">Sign up</mat-toolbar>\\n        <mat-card-content>\\n            <form name=\\\"form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"f.form.valid && signup()\\\" novalidate>\\n                <div>\\n                    <br />\\n                    <br />\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input type=\\\"text\\\" matInput [(ngModel)]=\\\"model.givenName\\\" name=\\\"givenName\\\" #givenName=\\\"ngModel\\\" placeholder=\\\"first name\\\" (keyup)=\\\"clearMessages()\\\" required>\\n                        <mat-error>\\n                            Required\\n                        </mat-error>\\n                    </mat-form-field>\\n                    <br />\\n                    <br />\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input type=\\\"text\\\" matInput [(ngModel)]=\\\"model.familyName\\\" name=\\\"familyName\\\" #familyName=\\\"ngModel\\\" placeholder=\\\"last name\\\" (keyup)=\\\"clearMessages()\\\" required>\\n                        <mat-error>\\n                            Required\\n                        </mat-error>\\n                    </mat-form-field>\\n                    <br />\\n                    <br />\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input type=\\\"text\\\" matInput [(ngModel)]=\\\"model.username\\\" name=\\\"username\\\" #username=\\\"ngModel\\\" placeholder=\\\"email\\\" (keyup)=\\\"clearMessages()\\\"\\n                               pattern=\\\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\\\" required>\\n                        <mat-error *ngIf=\\\"username.hasError('required')\\\">\\n                            Required\\n                        </mat-error>\\n                        <mat-error *ngIf=\\\"username.hasError('pattern')\\\">\\n                            Invalid format\\n                        </mat-error>\\n                    </mat-form-field>\\n                    <br />\\n                    <br />\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input type=\\\"password\\\" matInput [(ngModel)]=\\\"model.password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" placeholder=\\\"password\\\" (keyup)=\\\"clearMessages()\\\" required>\\n                        <mat-error>\\n                            Required\\n                        </mat-error>\\n                    </mat-form-field>\\n                    <br />\\n                    <div *ngIf=\\\"errorMessages.length > 0\\\" class=\\\"has-error\\\">\\n                        <div *ngFor=\\\"let errorMessage of errorMessages\\\">\\n                            <small>{{ errorMessage.description }}</small>\\n                        </div>\\n                    </div>\\n                    <br />\\n                </div>\\n                <div>\\n                    <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" class=\\\"full-width\\\">Sign up</button>\\n                </div>\\n            </form>\\n        </mat-card-content>\\n    </mat-card>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/account/signup/signup.component.html\n// module id = 129\n// module chunks = 2","import { Router } from '@angular/router';\n\nimport { AuthenticationService } from '../services/authentication.service';\n\n/**\n * Provides signin method to signin & signup components.\n */\nexport class Signin {\n\n    model: any = {};\n\n    errorMessages: any[] = [];\n\n    constructor(\n        protected router: Router,\n        protected authenticationService: AuthenticationService) { }\n\n    signin(): void {\n        this.authenticationService.signin(this.model.username, this.model.password)\n            .subscribe(\n            () => {\n                // Strategy for refresh token through a scheduler.\n                this.authenticationService.scheduleRefresh();\n\n                // Gets user's data.\n                this.authenticationService.getUserInfo().subscribe(\n                    (userInfo: any) => {\n                        this.authenticationService.changeUser(userInfo);\n\n                        // Gets the redirect URL from authentication service.\n                        // If no redirect has been set, uses the default.\n                        const redirect: string = this.authenticationService.redirectUrl\n                            ? this.authenticationService.redirectUrl\n                            : '/home';\n                        // Redirects the user.\n                        this.router.navigate([redirect]);\n                    });\n            },\n            (error: any) => {\n                // Checks for error in response (error from the Token endpoint).\n                if (error.body != \"\") {\n                    const body: any = error.json();\n\n                    switch (body.error) {\n                        case \"invalid_grant\":\n                            this.errorMessages.push({ description: \"Invalid email or password.\" });\n                            break;\n                        default:\n                            this.errorMessages.push({ description: \"Unexpected error. Try again.\" });\n                    }\n                } else {\n                    const errMsg = (error.message) ? error.message :\n                        error.status ? `${error.status} - ${error.statusText}` : \"Server error\";\n                    console.log(errMsg);\n                    this.errorMessages.push({ description: \"Server error. Try later.\" });\n                }\n            });\n    }\n\n    clearMessages(): void {\n        this.errorMessages = [];\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular-router-loader/src!./node_modules/angular2-template-loader!./node_modules/source-map-loader!./app/account/signin.ts","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { Signin } from '../signin';\n\n@Component({\n    template: require('./signin.component.html')\n})\nexport class SigninComponent extends Signin {\n\n    constructor(\n        protected router: Router,\n        protected authenticationService: AuthenticationService) {\n        super(router, authenticationService);\n\n        // Preloads data for live example.\n        this.model.username = \"admin@gmail.com\";\n        this.model.password = \"Admin01*\";\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular-router-loader/src!./node_modules/angular2-template-loader!./node_modules/source-map-loader!./app/account/signin/signin.component.ts","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { IdentityService } from '../../services/identity.service';\nimport { Signin } from '../signin';\n\n@Component({\n    template: require('./signup.component.html')\n})\nexport class SignupComponent extends Signin {\n\n    constructor(\n        protected router: Router,\n        protected authenticationService: AuthenticationService,\n        private identityService: IdentityService) {\n        super(router, authenticationService);\n    }\n\n    signup(): void {\n        this.identityService.create(this.model)\n            .subscribe(\n            (res: any) => {\n                // IdentityResult.\n                if (res.succeeded) {\n                    // Signs in the user.\n                    this.signin();\n                } else {\n                    this.errorMessages = res.errors;\n                }\n            },\n            (error: any) => {\n                const errMsg = (error.message) ? error.message :\n                    error.status ? `${error.status} - ${error.statusText}` : \"Server error\";\n                console.log(errMsg);\n                this.errorMessages.push({ description: \"Server error. Try later.\" });\n            });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular-router-loader/src!./node_modules/angular2-template-loader!./node_modules/source-map-loader!./app/account/signup/signup.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\n\nconst routes: Routes = [\n    { path: 'signin', component: SigninComponent },\n    { path: 'signup', component: SignupComponent }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular-router-loader/src!./node_modules/angular2-template-loader!./node_modules/source-map-loader!./app/account/account-routing.module.ts","import { NgModule } from '@angular/core';\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\n\n@NgModule({\n    imports: [\n        AccountRoutingModule,\n        SharedModule\n    ],\n    declarations: [\n        SigninComponent,\n        SignupComponent\n    ]\n})\nexport class AccountModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular-router-loader/src!./node_modules/angular2-template-loader!./node_modules/source-map-loader!./app/account/account.module.ts"],"sourceRoot":""}